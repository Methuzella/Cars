/*There are 2 ways to define a member function:

>>>>Inside class definition
    //What you have been doing till now 
>>>Outside class definition
    // We have to first declare the function prototype in the class definition. without giving it a definition(body)
    // Then we have to use the scope resolution::operator along with the class name and function name out side the class and define it..
   / void Members::namesAndDetails(){
  //function definition comes here
}*/

//A class to represent a car with attributes like make, model, year, and fuel level. Methods could include accelerate(), brake(), refuel(), and getCarInfo().

// C++ program to illustrate how create a simple class and
// C++ program to illustrate how create a simple class and
// object
#include <iostream>
#include <string>
using namespace std;

class Cars{
    public:
           string make, model,carStatus;
           int year;
           float fuelLevel,FuelAdded, maxSpeed=200.0,defaultSpeed=10.0, speed;
        
          void getCarInfo(){
              cout<< "This is car was manufactured/produced by "<<make<< " it is a "<< year<<" "<< model << ". It currently has about "<< fuelLevel<<" litres of fuel."<<endl;
          }////General car information
          void startEngine();
          void stopEngine();
///Adding and checking fuel
          void addFuel(){
              if (fuelLevel<=1){
                  cout<<"How much fuel would you like to add?"<<endl;
                  cin>> FuelAdded;
                  cout<<"Fuel added: ";
                  
                  fuelLevel+=FuelAdded;
                  cout<<fuelLevel<<" litres"<<endl;
              }
          }
          void checkfuel(){
            if (fuelLevel<=1){
                  cout<<"Fuel is running low: "<<fuelLevel << " millilitres remaining"<<endl;
                  ///if stopped add fuel
                  if(carStatus=="Off"){
                      addFuel();
                  }
              }
            else{
                cout<<"There are: "<< fuelLevel<<" litres of fuel"<<endl;
              }
          }
////////////////
         void accelerate(){
             if(carStatus=="On" && speed<=maxSpeed){
                 if(speed==0){
                     speed=+defaultSpeed;
                     cout<<"Car has started and accelerated to: "<< speed<<endl;
                 }
                 elseif( speed>=defaultSpeed ){
                     while(..........){
                         speed+=1;
                         fuelLevel-=0.001;
                         if (fuelLevel==0){
                             speed=0;
                             cout<<"There is no fuel. ";
                             carbrake();
                             break;
                         }
                         if(speed==maxSpeed){
                             cout<<"Maximum speed reached"<<endl;
                             break;
                         }
                         else {
                             
                         }
                     }
                 }
             }
         }
         void carbrake(){
             if (speed==0){
                 cout<<"The car has stopped"<<end;
             }
             
         }
};

//Starting and stopping the car
void Cars::startEngine(){
         carStatus="On";
         cout<<"The car has been turned on"<<endl;
         accelerate();
}
void Cars::stopEngine(){
     if (carStatus=="On"){
         carStatus="Off";
         cout<<"The car has been turned off"<<endl;
     }
}

int main() {
	// your code goes here
         Cars Merc;
         Merc.make="Mercedez";
         Merc.model= "GLC Coupe";
         Merc.year= 2016;
         Merc.fuelLevel= 0.02;
         Merc.getCarInfo();
         Merc.startEngine();
         Merc.checkfuel();
         Merc.stopEngine();
}
